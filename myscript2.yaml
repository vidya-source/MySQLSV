---
- name: MySQL Server Health Check
  hosts: all
  connection: ssh
  become: true
  vars:
    mysql_host: "{{mysql_host}}"
    mysql_user: "{{mysql_user}}"
    mysql_password: "{{mysql_password}}"
    mysql_database: "{{mysql_database}}"
    mysql_port: "{{mysql_port}}"
  
  tasks:
    - name: Check MySQL server connection
      command: "mysql -h {{ mysql_host }} -P {{ mysql_port }} -u {{ mysql_user }} -p{{ mysql_password }} -e 'SELECT 1;'"
      register: mysql_connection_status
      failed_when: mysql_connection_status.rc != 0
      changed_when: false

    - name: Ensure MySQL is connected successfully
      debug:
        msg: "Successfully connected to MySQL server"
      when: mysql_connection_status.rc == 0

    - name: Get database space utilization
      command: "mysql -h {{ mysql_host }} -P {{ mysql_port }} -u {{ mysql_user }} -p{{ mysql_password }} -e 'SELECT table_schema AS \"Database\", ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS \"Size (MB)\" FROM information_schema.tables GROUP BY table_schema;'"
      register: db_space

    - name: Print database space utilization
      debug:
        msg: "Database: {{ item.Database }} | Size (MB): {{ item.Size }}"
      loop: "{{ db_space.stdout_lines[1:] }}"
      when: db_space.stdout_lines | length > 1

    - name: Get MySQL server uptime
      command: "mysql -h {{ mysql_host }} -P {{ mysql_port }} -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW STATUS LIKE \"Uptime\";'"
      register: mysql_uptime

    - name: Get number of threads connected
      command: "mysql -h {{ mysql_host }} -P {{ mysql_port }} -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW STATUS LIKE \"Threads_connected\";'"
      register: threads_connected

    - name: Print database health (Uptime and Threads Connected)
      debug:
        msg: "Uptime: {{ mysql_uptime.stdout_lines[1].split()[1] }} seconds, Threads connected: {{ threads_connected.stdout_lines[1].split()[1] }}"
      when: mysql_uptime.stdout_lines | length > 1 and threads_connected.stdout_lines | length > 1

    - name: Check for MySQL deadlocks
      command: "mysql -h {{ mysql_host }} -P {{ mysql_port }} -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW ENGINE INNODB STATUS;'"
      register: innodb_status

    - name: Detect deadlocks from INNODB STATUS
      debug:
        msg: "Deadlock detected: {{ item }}"
      loop: "{{ innodb_status.stdout_lines }}"
      when: "'LATEST DETECTED DEADLOCK' in item"
      failed_when: false

    - name: Show MySQL process list (current running queries)
      command: "mysql -h {{ mysql_host }} -P {{ mysql_port }} -u {{ mysql_user }} -p{{ mysql_password }} -e 'SHOW PROCESSLIST;'"
      register: processlist

    - name: Print running queries
      debug:
        msg: "ID: {{ item.split()[0] }} | User: {{ item.split()[1] }} | Command: {{ item.split()[4] }} | Time: {{ item.split()[5] }} | Info: {{ item.split()[7] }}"
      loop: "{{ processlist.stdout_lines[1:] }}"
      when: processlist.stdout_lines | length > 1
