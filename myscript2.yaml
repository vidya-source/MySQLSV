---
- name: MySQL Server Health Check and Utilization
  hosts: mysql_servers
  become: true
  vars:
    mysql_host: "mysql_host"  # Replace with your MySQL host IP
    mysql_user: "mysql_user"  # Replace with your MySQL user
    mysql_password: "your_mysql_password"  # Replace with your MySQL password
    mysql_database: "your_database_name"  # Replace with your database name

  tasks:
    # Step 1: Ensure MySQL client is installed
    - name: Ensure MySQL client is installed
      package:
        name: mysql-client
        state: present

    # Step 2: Check database space utilization
    - name: Check database space utilization
      mysql_query:
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_host: "{{ mysql_host }}"
        query: |
          SELECT table_schema AS 'Database', 
                 SUM(data_length + index_length) / 1024 / 1024 AS 'Size (MB)'
          FROM information_schema.tables
          GROUP BY table_schema;
      register: db_space

    - name: Display database space utilization
      debug:
        msg: "{{ db_space.query_result }}"

    # Step 3: Check MySQL server health (Uptime and Threads connected)
    - name: Check MySQL Uptime
      mysql_query:
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_host: "{{ mysql_host }}"
        query: |
          SHOW STATUS LIKE 'Uptime';
      register: uptime_result

    - name: Display MySQL uptime
      debug:
        msg: "Uptime: {{ uptime_result.query_result[0].Value }} seconds"

    - name: Check MySQL Threads connected
      mysql_query:
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_host: "{{ mysql_host }}"
        query: |
          SHOW STATUS LIKE 'Threads_connected';
      register: threads_result

    - name: Display threads connected
      debug:
        msg: "Threads connected: {{ threads_result.query_result[0].Value }}"

    # Step 4: Check for deadlocks in the InnoDB engine
    - name: Check for deadlocks in InnoDB engine
      mysql_query:
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_host: "{{ mysql_host }}"
        query: |
          SHOW ENGINE INNODB STATUS;
      register: innodb_status

    - name: Display deadlock information
      debug:
        msg: "{{ innodb_status.query_result | selectattr('Variable_name', 'equalto', 'LATEST DETECTED DEADLOCK') | map(attribute='Value') | list }}"

    # Step 5: Check running job activities (current queries)
    - name: Get list of current running queries
      mysql_query:
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_host: "{{ mysql_host }}"
        query: |
          SHOW PROCESSLIST;
      register: processlist_result

    - name: Display current running queries/jobs
      debug:
        msg: "{{ processlist_result.query_result }}"
